from cv2 import VideoCapture, VideoWriter_fourcc, VideoWriter, threshold
from cv2 import CAP_PROP_FPS, CAP_PROP_FRAME_COUNT, THRESH_BINARY
from pysubs2 import load, time, SSAEvent
from alive_progress import alive_bar

def cal_stderr(img):
    if img is None:
        return 0
    return (img ** 2).sum() / img.size * 100

filename = input("输入文件名：")

STYLE_FILE = """\
[Script Info]
; Script generated by Aegisub r8942
; http://www.aegisub.org/
Title: Default Aegisub file
ScriptType: v4.00+
WrapStyle: 0
ScaledBorderAndShadow: yes
YCbCr Matrix: TV.601
PlayResX: 1600
PlayResY: 1200

[Aegisub Project Garbage]
Last Style Storage: 
Audio File: 
Video File: 
Video AR Mode: 4
Video AR Value: 1.333333
Video Zoom Percent: 0.500000
Active Line: 8
Video Position: 1734

[V4+ Styles]
Format: Name, Fontname, Fontsize, PrimaryColour, SecondaryColour, OutlineColour, BackColour, Bold, Italic, Underline, StrikeOut, ScaleX, ScaleY, Spacing, Angle, BorderStyle, Outline, Shadow, Alignment, MarginL, MarginR, MarginV, Encoding

[Events]
Format: Layer, Start, End, Style, Name, MarginL, MarginR, MarginV, Effect, Text
"""
with open(filename+".ass", "w", encoding='utf-8') as fp:
    fp.write(STYLE_FILE)

subs = load(filename+".ass")

videoCap = VideoCapture(filename+".mp4")
fps = videoCap.get(CAP_PROP_FPS)
length = int(videoCap.get(CAP_PROP_FRAME_COUNT))
curr_frame = 0
last_img = None
start = end = start0 = 0
flag = True
TH = 0.1

with alive_bar(length, title="progress") as bar:
    while True:
        ret, frame = videoCap.read()
        curr_frame += 1
        if frame is None:
            print('video: %s finish at %d frame.' % (filename, curr_frame))
            break
        im = frame[:, :, 0]
        _, img = threshold(im[988:1050,114:500], 225, 255, THRESH_BINARY)

        _, img0 = threshold(im[908:970,114:270], 225, 255, THRESH_BINARY)
        if cal_stderr(img0) >= TH and flag == True:
            start0 = curr_frame
            flag = False
        if cal_stderr(last_img) < TH and cal_stderr(img) >=TH :
            start = curr_frame-3
            if start - end < 6:
                start = end+1
            else:
                start = start0-1
            # print("start "+str(start))
        elif cal_stderr(last_img) >= TH and cal_stderr(img) <TH:
            end = curr_frame-2
            # print("end "+str(end))
            subs.insert(0, SSAEvent(start=time.frames_to_ms(start, fps),end=time.frames_to_ms(end, fps)))
            flag = True
        last_img = img
        bar()
videoCap.release()
subs.sort()
subs.save(filename+".ass")